// <auto-generated />
using System;
using FxCryptApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FxCryptApp.Data.Migrations
{
    [DbContext(typeof(FxCryptAppDbContext))]
    [Migration("20221026112322_AddedBtcUsdTable")]
    partial class AddedBtcUsdTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FxCryptApp.Data.Entities.BtcUsdPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("SeededDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("TickerSourceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TickerSourceId");

                    b.ToTable("BtcUsdPrice");
                });

            modelBuilder.Entity("FxCryptApp.Data.Entities.TickerSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("EndpointUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RetryLimit")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TickerSource");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EndpointUrl = "https://www.bitstamp.net/api/v2/ticker/btcusd/",
                            Name = "Bitstamp API",
                            RetryLimit = 3L
                        },
                        new
                        {
                            Id = 2L,
                            EndpointUrl = "https://api.bitfinex.com/v1/pubticker/btcusd/",
                            Name = "Bitfinex API",
                            RetryLimit = 3L
                        });
                });

            modelBuilder.Entity("FxCryptApp.Data.Entities.BtcUsdPrice", b =>
                {
                    b.HasOne("FxCryptApp.Data.Entities.TickerSource", "TickerSource")
                        .WithMany()
                        .HasForeignKey("TickerSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TickerSource");
                });
#pragma warning restore 612, 618
        }
    }
}
